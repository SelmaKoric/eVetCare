services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong@Passw0rd
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - evetcare-network
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -C -S localhost -U sa -P YourStrong@Passw0rd -Q 'SELECT 1' || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - evetcare-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  db-init:
    build:
      context: .
      dockerfile: Dockerfile.db-init
    environment:
      - DB_SERVER=sqlserver
      - SA_PASSWORD=YourStrong@Passw0rd
    depends_on:
      sqlserver:
        condition: service_healthy
    networks:
      - evetcare-network
    restart: "no"

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=eVetCare;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true;MultipleActiveResultSets=true
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Username=guest
      - RabbitMQ__Password=guest
      - Jwt__Key=YourSuperSecretKeyHereMakeItLongEnoughForSecurity
      - Jwt__Issuer=eVetCare
      - Jwt__Audience=eVetCare
      - Stripe__SecretKey=your_stripe_secret_key_here
    depends_on:
      db-init:
        condition: service_completed_successfully
      rabbitmq:
        condition: service_healthy
    networks:
      - evetcare-network
    volumes:
      - ./eVetCare/wwwroot/images:/app/wwwroot/images

  notifications:
    build:
      context: .
      dockerfile: Dockerfile.notifications
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=eVetCare;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true;MultipleActiveResultSets=true
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Username=guest
      - RabbitMQ__Password=guest
    depends_on:
      db-init:
        condition: service_completed_successfully
      rabbitmq:
        condition: service_healthy
    networks:
      - evetcare-network

volumes:
  sqlserver_data:
  rabbitmq_data:

networks:
  evetcare-network:
    driver: bridge
