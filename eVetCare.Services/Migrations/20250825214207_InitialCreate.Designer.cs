// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eVetCare.Services.Database;

#nullable disable

namespace eVetCare.Services.Migrations
{
    [DbContext(typeof(EVetCareContext))]
    [Migration("20250825214207_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("eVetCare.Services.Database.Appointment", b =>
                {
                    b.Property<int>("AppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AppointmentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentId"));

                    b.Property<int>("AppointmentStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("CreatedByAdmin")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<TimeSpan?>("Duration")
                        .HasColumnType("time");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("PetId")
                        .HasColumnType("int")
                        .HasColumnName("PetID");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.HasKey("AppointmentId")
                        .HasName("PK__Appointm__8ECDFCA2B5388698");

                    b.HasIndex("AppointmentStatusId");

                    b.HasIndex("PetId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("eVetCare.Services.Database.AppointmentService", b =>
                {
                    b.Property<int>("AppointmentServicesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AppointmentServicesID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentServicesId"));

                    b.Property<int>("AppointmentId")
                        .HasColumnType("int")
                        .HasColumnName("AppointmentID");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int")
                        .HasColumnName("ServiceID");

                    b.HasKey("AppointmentServicesId")
                        .HasName("PK__Appointm__0D8E257CDDB84DA2");

                    b.HasIndex("AppointmentId");

                    b.HasIndex("ServiceId");

                    b.ToTable("AppointmentServices");
                });

            modelBuilder.Entity("eVetCare.Services.Database.AppointmentStatus", b =>
                {
                    b.Property<int>("AppointmentStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentStatusId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AppointmentStatusId")
                        .HasName("PK__Appointm__A619B660B6BF8E8D");

                    b.HasIndex(new[] { "Name" }, "UQ__Appointm__737584F67F56CD09")
                        .IsUnique();

                    b.ToTable("AppointmentStatuses");
                });

            modelBuilder.Entity("eVetCare.Services.Database.Diagnosis", b =>
                {
                    b.Property<int>("DiagnosisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DiagnosisID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiagnosisId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("MedicalRecordId")
                        .HasColumnType("int")
                        .HasColumnName("MedicalRecordID");

                    b.HasKey("DiagnosisId")
                        .HasName("PK__Diagnose__0C54CB93E278C5C3");

                    b.HasIndex("MedicalRecordId");

                    b.ToTable("Diagnoses");
                });

            modelBuilder.Entity("eVetCare.Services.Database.Gender", b =>
                {
                    b.Property<int>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GenderID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenderId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("GenderId")
                        .HasName("PK__Genders__4E24E817524FB169");

                    b.HasIndex(new[] { "Name" }, "UQ__Genders__737584F6A4CE2C31")
                        .IsUnique();

                    b.ToTable("Genders");
                });

            modelBuilder.Entity("eVetCare.Services.Database.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("InvoiceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceId"));

                    b.Property<int>("AppointmentId")
                        .HasColumnType("int")
                        .HasColumnName("AppointmentID");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("date");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("InvoiceId")
                        .HasName("PK__Invoices__D796AAD590BE13E4");

                    b.HasIndex("AppointmentId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("eVetCare.Services.Database.InvoiceItem", b =>
                {
                    b.Property<int>("InvoiceItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("InvoiceItemID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceItemId"));

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int")
                        .HasColumnName("InvoiceID");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int")
                        .HasColumnName("ServiceID");

                    b.HasKey("InvoiceItemId")
                        .HasName("PK__InvoiceI__478FE0FC9944C508");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ServiceId");

                    b.ToTable("InvoiceItems");
                });

            modelBuilder.Entity("eVetCare.Services.Database.LabResult", b =>
                {
                    b.Property<int>("LabResultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LabResultID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LabResultId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LabTestId")
                        .HasColumnType("int");

                    b.Property<int>("MedicalRecordId")
                        .HasColumnType("int")
                        .HasColumnName("MedicalRecordID");

                    b.Property<string>("ResultValue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("LabResultId")
                        .HasName("PK__LabResul__3CEBE3964A5A56FA");

                    b.HasIndex("LabTestId");

                    b.HasIndex("MedicalRecordId");

                    b.ToTable("LabResults");
                });

            modelBuilder.Entity("eVetCare.Services.Database.LabTest", b =>
                {
                    b.Property<int>("LabTestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LabTestId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ReferenceRange")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LabTestId")
                        .HasName("PK__LabTests__64D339253100BB88");

                    b.ToTable("LabTests");
                });

            modelBuilder.Entity("eVetCare.Services.Database.MedicalRecord", b =>
                {
                    b.Property<int>("MedicalRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MedicalRecordID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicalRecordId"));

                    b.Property<string>("AnalysisProvided")
                        .HasColumnType("text");

                    b.Property<int>("AppointmentId")
                        .HasColumnType("int")
                        .HasColumnName("AppointmentID");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<int>("PetId")
                        .HasColumnType("int")
                        .HasColumnName("PetID");

                    b.HasKey("MedicalRecordId")
                        .HasName("PK__MedicalR__4411BBC2CABCA888");

                    b.HasIndex("AppointmentId");

                    b.HasIndex("PetId");

                    b.ToTable("MedicalRecords");
                });

            modelBuilder.Entity("eVetCare.Services.Database.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NotificationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<DateTime?>("DateTimeSent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("NotificationId")
                        .HasName("PK__Notifica__20CF2E326C6E6D8F");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("eVetCare.Services.Database.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PaymentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerZip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int")
                        .HasColumnName("InvoiceID");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Metadata")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MethodId")
                        .HasColumnType("int")
                        .HasColumnName("MethodID");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("date");

                    b.Property<string>("PaymentIntentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethodId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentId")
                        .HasName("PK__Payments__9B556A58A49F1F09");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("MethodId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("eVetCare.Services.Database.PaymentMethod", b =>
                {
                    b.Property<int>("MethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MethodID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MethodId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MethodId")
                        .HasName("PK__PaymentM__FC681FB1331AE184");

                    b.ToTable("PaymentMethods");
                });

            modelBuilder.Entity("eVetCare.Services.Database.Pet", b =>
                {
                    b.Property<int>("PetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PetID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PetId"));

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Breed")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int")
                        .HasColumnName("GenderID");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int")
                        .HasColumnName("OwnerID");

                    b.Property<string>("PhotoUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("SpeciesId")
                        .HasColumnType("int")
                        .HasColumnName("SpeciesID");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("PetId")
                        .HasName("PK__Pets__48E53802D7583274");

                    b.HasIndex("GenderId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("SpeciesId");

                    b.ToTable("Pets");
                });

            modelBuilder.Entity("eVetCare.Services.Database.Recommendation", b =>
                {
                    b.Property<int>("RecommendationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecommendationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecommendationId"));

                    b.Property<string>("Content")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("PetId")
                        .HasColumnType("int")
                        .HasColumnName("PetID");

                    b.HasKey("RecommendationId")
                        .HasName("PK__Recommen__AA15BEC4D267293E");

                    b.HasIndex("PetId");

                    b.ToTable("Recommendations");
                });

            modelBuilder.Entity("eVetCare.Services.Database.Reminder", b =>
                {
                    b.Property<int>("ReminderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReminderID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReminderId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("TargetDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("ReminderId")
                        .HasName("PK__Reminder__01A830A7B9CDBC3A");

                    b.HasIndex("UserId");

                    b.ToTable("Reminders");
                });

            modelBuilder.Entity("eVetCare.Services.Database.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId")
                        .HasName("PK__Roles__8AFACE3A6EB0163D");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("eVetCare.Services.Database.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ServiceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceId"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("DurationMinutes")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("ServiceId")
                        .HasName("PK__Services__C51BB0EAD3B480F3");

                    b.HasIndex("CategoryId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("eVetCare.Services.Database.ServiceCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryId")
                        .HasName("PK__ServiceC__19093A2B2D4630DA");

                    b.HasIndex(new[] { "Name" }, "UQ__ServiceC__737584F637D23FC9")
                        .IsUnique();

                    b.ToTable("ServiceCategories");
                });

            modelBuilder.Entity("eVetCare.Services.Database.Species", b =>
                {
                    b.Property<int>("SpeciesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SpeciesID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpeciesId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SpeciesId")
                        .HasName("PK__Species__A938047F3A024D64");

                    b.ToTable("Species");
                });

            modelBuilder.Entity("eVetCare.Services.Database.StatisticsLog", b =>
                {
                    b.Property<int>("StatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StatID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LoggedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Metric")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Value")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("StatId")
                        .HasName("PK__Statisti__3A162D1EE8EDF80B");

                    b.ToTable("StatisticsLog", (string)null);
                });

            modelBuilder.Entity("eVetCare.Services.Database.Treatment", b =>
                {
                    b.Property<int>("TreatmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TreatmentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TreatmentId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("MedicalRecordId")
                        .HasColumnType("int")
                        .HasColumnName("MedicalRecordID");

                    b.Property<string>("TreatmentDescription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("TreatmentId")
                        .HasName("PK__Treatmen__1A57B711B499BB9E");

                    b.HasIndex("MedicalRecordId");

                    b.ToTable("Treatments");
                });

            modelBuilder.Entity("eVetCare.Services.Database.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsAppUser")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PasswordSalt")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CCAC08D89017");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D10534193BE1ED")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("eVetCare.Services.Database.UserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserRoleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserRoleId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("UserRoleId")
                        .HasName("PK__UserRole__3D978A55CE502CEB");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("eVetCare.Services.Database.Vaccination", b =>
                {
                    b.Property<int>("VaccinationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VaccinationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VaccinationId"));

                    b.Property<DateTime>("DateGiven")
                        .HasColumnType("date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("MedicalRecordId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("NextDue")
                        .HasColumnType("date");

                    b.HasKey("VaccinationId")
                        .HasName("PK__Vaccinat__466BCFA7D1186B97");

                    b.HasIndex("MedicalRecordId");

                    b.ToTable("Vaccinations");
                });

            modelBuilder.Entity("eVetCare.Services.Database.Appointment", b =>
                {
                    b.HasOne("eVetCare.Services.Database.AppointmentStatus", "AppointmentStatus")
                        .WithMany("Appointments")
                        .HasForeignKey("AppointmentStatusId")
                        .IsRequired()
                        .HasConstraintName("FK_Appointments_Status");

                    b.HasOne("eVetCare.Services.Database.Pet", "Pet")
                        .WithMany("Appointments")
                        .HasForeignKey("PetId")
                        .IsRequired()
                        .HasConstraintName("FK__Appointme__PetID__4AB81AF0");

                    b.Navigation("AppointmentStatus");

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("eVetCare.Services.Database.AppointmentService", b =>
                {
                    b.HasOne("eVetCare.Services.Database.Appointment", "Appointment")
                        .WithMany("AppointmentServices")
                        .HasForeignKey("AppointmentId")
                        .IsRequired()
                        .HasConstraintName("FK__Appointme__Appoi__60A75C0F");

                    b.HasOne("eVetCare.Services.Database.Service", "Service")
                        .WithMany("AppointmentServices")
                        .HasForeignKey("ServiceId")
                        .IsRequired()
                        .HasConstraintName("FK__Appointme__Servi__619B8048");

                    b.Navigation("Appointment");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("eVetCare.Services.Database.Diagnosis", b =>
                {
                    b.HasOne("eVetCare.Services.Database.MedicalRecord", "MedicalRecord")
                        .WithMany("Diagnoses")
                        .HasForeignKey("MedicalRecordId")
                        .IsRequired()
                        .HasConstraintName("FK__Diagnoses__Medic__6E01572D");

                    b.Navigation("MedicalRecord");
                });

            modelBuilder.Entity("eVetCare.Services.Database.Invoice", b =>
                {
                    b.HasOne("eVetCare.Services.Database.Appointment", "Appointment")
                        .WithMany("Invoices")
                        .HasForeignKey("AppointmentId")
                        .IsRequired()
                        .HasConstraintName("FK__Invoices__Appoin__797309D9");

                    b.Navigation("Appointment");
                });

            modelBuilder.Entity("eVetCare.Services.Database.InvoiceItem", b =>
                {
                    b.HasOne("eVetCare.Services.Database.Invoice", "Invoice")
                        .WithMany("InvoiceItems")
                        .HasForeignKey("InvoiceId")
                        .IsRequired()
                        .HasConstraintName("FK__InvoiceIt__Invoi__7D439ABD");

                    b.HasOne("eVetCare.Services.Database.Service", "Service")
                        .WithMany("InvoiceItems")
                        .HasForeignKey("ServiceId")
                        .IsRequired()
                        .HasConstraintName("FK__InvoiceIt__Servi__7E37BEF6");

                    b.Navigation("Invoice");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("eVetCare.Services.Database.LabResult", b =>
                {
                    b.HasOne("eVetCare.Services.Database.LabTest", "LabTest")
                        .WithMany("LabResults")
                        .HasForeignKey("LabTestId")
                        .HasConstraintName("FK_LabResult_LabTest");

                    b.HasOne("eVetCare.Services.Database.MedicalRecord", "MedicalRecord")
                        .WithMany("LabResults")
                        .HasForeignKey("MedicalRecordId")
                        .IsRequired()
                        .HasConstraintName("FK__LabResult__Medic__76969D2E");

                    b.Navigation("LabTest");

                    b.Navigation("MedicalRecord");
                });

            modelBuilder.Entity("eVetCare.Services.Database.MedicalRecord", b =>
                {
                    b.HasOne("eVetCare.Services.Database.Appointment", "Appointment")
                        .WithMany("MedicalRecords")
                        .HasForeignKey("AppointmentId")
                        .IsRequired()
                        .HasConstraintName("FK__MedicalRe__Appoi__6B24EA82");

                    b.HasOne("eVetCare.Services.Database.Pet", "Pet")
                        .WithMany("MedicalRecords")
                        .HasForeignKey("PetId")
                        .IsRequired()
                        .HasConstraintName("FK__MedicalRe__PetID__6A30C649");

                    b.Navigation("Appointment");

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("eVetCare.Services.Database.Notification", b =>
                {
                    b.HasOne("eVetCare.Services.Database.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Notificat__UserI__07C12930");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eVetCare.Services.Database.Payment", b =>
                {
                    b.HasOne("eVetCare.Services.Database.Invoice", "Invoice")
                        .WithMany("Payments")
                        .HasForeignKey("InvoiceId")
                        .IsRequired()
                        .HasConstraintName("FK__Payments__Invoic__02FC7413");

                    b.HasOne("eVetCare.Services.Database.PaymentMethod", "Method")
                        .WithMany("Payments")
                        .HasForeignKey("MethodId")
                        .IsRequired()
                        .HasConstraintName("FK__Payments__Method__03F0984C");

                    b.Navigation("Invoice");

                    b.Navigation("Method");
                });

            modelBuilder.Entity("eVetCare.Services.Database.Pet", b =>
                {
                    b.HasOne("eVetCare.Services.Database.Gender", "Gender")
                        .WithMany("Pets")
                        .HasForeignKey("GenderId")
                        .HasConstraintName("FK_Pets_GenderID");

                    b.HasOne("eVetCare.Services.Database.User", "Owner")
                        .WithMany("Pets")
                        .HasForeignKey("OwnerId")
                        .IsRequired()
                        .HasConstraintName("FK__Pets__OwnerID__46E78A0C");

                    b.HasOne("eVetCare.Services.Database.Species", "Species")
                        .WithMany("Pets")
                        .HasForeignKey("SpeciesId")
                        .IsRequired()
                        .HasConstraintName("FK__Pets__SpeciesID__47DBAE45");

                    b.Navigation("Gender");

                    b.Navigation("Owner");

                    b.Navigation("Species");
                });

            modelBuilder.Entity("eVetCare.Services.Database.Recommendation", b =>
                {
                    b.HasOne("eVetCare.Services.Database.Pet", "Pet")
                        .WithMany("Recommendations")
                        .HasForeignKey("PetId")
                        .IsRequired()
                        .HasConstraintName("FK__Recommend__PetID__114A936A");

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("eVetCare.Services.Database.Reminder", b =>
                {
                    b.HasOne("eVetCare.Services.Database.User", "User")
                        .WithMany("Reminders")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Reminders__UserI__0A9D95DB");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eVetCare.Services.Database.Service", b =>
                {
                    b.HasOne("eVetCare.Services.Database.ServiceCategory", "Category")
                        .WithMany("Services")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__Services__Catego__59FA5E80");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("eVetCare.Services.Database.Treatment", b =>
                {
                    b.HasOne("eVetCare.Services.Database.MedicalRecord", "MedicalRecord")
                        .WithMany("Treatments")
                        .HasForeignKey("MedicalRecordId")
                        .IsRequired()
                        .HasConstraintName("FK__Treatment__Medic__70DDC3D8");

                    b.Navigation("MedicalRecord");
                });

            modelBuilder.Entity("eVetCare.Services.Database.UserRole", b =>
                {
                    b.HasOne("eVetCare.Services.Database.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__UserRoles__RoleI__4222D4EF");

                    b.HasOne("eVetCare.Services.Database.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserRoles__UserI__412EB0B6");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eVetCare.Services.Database.Vaccination", b =>
                {
                    b.HasOne("eVetCare.Services.Database.MedicalRecord", "MedicalRecord")
                        .WithMany("Vaccinations")
                        .HasForeignKey("MedicalRecordId")
                        .IsRequired()
                        .HasConstraintName("FK_Vaccinations_MedicalRecords");

                    b.Navigation("MedicalRecord");
                });

            modelBuilder.Entity("eVetCare.Services.Database.Appointment", b =>
                {
                    b.Navigation("AppointmentServices");

                    b.Navigation("Invoices");

                    b.Navigation("MedicalRecords");
                });

            modelBuilder.Entity("eVetCare.Services.Database.AppointmentStatus", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("eVetCare.Services.Database.Gender", b =>
                {
                    b.Navigation("Pets");
                });

            modelBuilder.Entity("eVetCare.Services.Database.Invoice", b =>
                {
                    b.Navigation("InvoiceItems");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("eVetCare.Services.Database.LabTest", b =>
                {
                    b.Navigation("LabResults");
                });

            modelBuilder.Entity("eVetCare.Services.Database.MedicalRecord", b =>
                {
                    b.Navigation("Diagnoses");

                    b.Navigation("LabResults");

                    b.Navigation("Treatments");

                    b.Navigation("Vaccinations");
                });

            modelBuilder.Entity("eVetCare.Services.Database.PaymentMethod", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("eVetCare.Services.Database.Pet", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("MedicalRecords");

                    b.Navigation("Recommendations");
                });

            modelBuilder.Entity("eVetCare.Services.Database.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("eVetCare.Services.Database.Service", b =>
                {
                    b.Navigation("AppointmentServices");

                    b.Navigation("InvoiceItems");
                });

            modelBuilder.Entity("eVetCare.Services.Database.ServiceCategory", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("eVetCare.Services.Database.Species", b =>
                {
                    b.Navigation("Pets");
                });

            modelBuilder.Entity("eVetCare.Services.Database.User", b =>
                {
                    b.Navigation("Notifications");

                    b.Navigation("Pets");

                    b.Navigation("Reminders");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
